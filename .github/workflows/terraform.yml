name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  id-token: write
  contents: read

jobs:
  tflint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - uses: actions/cache@v3
      name: Cache plugin dir
      with:
        path: ~/.tflint.d/plugins
        key: ubuntu-latest-tflint-${{ hashFiles('.tflint.hcl') }}

    - uses: terraform-linters/setup-tflint@v3
      name: Setup TFLint
      with:
        tflint_version: v0.44.1

    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init
      #env:
        # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
        #GITHUB_TOKEN: ${{ github.token }}

    - name: Run TFLint
      run: tflint -f compact

  tfsec:
    runs-on: ubuntu-latest

    steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Run Tfsec
          uses: aquasecurity/tfsec-action@v1.0.3

  checkov:
    runs-on: ubuntu-latest

    steps:

        - name: Checkout
          uses: actions/checkout@v3

        - name: Set up Python 3.8
          uses: actions/setup-python@v4
          with:
            python-version: 3.8

        - name: Test with Checkov
          id: checkov
          uses: bridgecrewio/checkov-action@master
          with:
            #directory: example/examplea
            framework: terraform

  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::785672774069:role/github-actions-3541d8686b2c9621502d21fd5453e510
        aws-region: eu-west-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      run: terraform plan -var-file="variables.tfvars" -input=false -out=terraform.plan

      # On push to "main", deploy the Terraform infrastructure
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false terraform.plan
